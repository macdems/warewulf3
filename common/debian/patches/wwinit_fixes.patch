Description: Fixes for wwinit.
 Fixed wwinit database to work with external servers.
 MySQL init asks for root password if necessary.
--- warewulf-common-3.7+1git43951bf.orig/libexec/wwinit/10-database.init
+++ warewulf-common-3.7+1git43951bf/libexec/wwinit/10-database.init
@@ -22,6 +22,7 @@ fi
 wwreqroot
 
 DATASTORE=`egrep "^database driver\s*=" $WAREWULF_SYSCONFDIR/warewulf/database.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
+DBSERVER=`egrep "^database server\s*=" $WAREWULF_SYSCONFDIR/warewulf/database.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
 DBNAME=`egrep "^database name\s*=" $WAREWULF_SYSCONFDIR/warewulf/database.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
 DBUSER=`egrep "^database user\s*=" $WAREWULF_SYSCONFDIR/warewulf/database.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
 DBPASS=`egrep "^database password\s*=" $WAREWULF_SYSCONFDIR/warewulf/database.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
@@ -29,6 +30,12 @@ DBROOTUSER=`egrep "^database user\s*=" $
 DBROOTPASS=`egrep "^database password\s*=" $WAREWULF_SYSCONFDIR/warewulf/database-root.conf | awk -F = '{print $2}' | sed -e 's/\s*//g'`
 APIVERSION="1"
 
+if [ "$DBROOTUSER" != "" ]; then
+    DBUSER=$DBROOTUSER
+    DBPASS=$DBROOTPASS
+fi
+
+
 SCHEMA="CREATE TABLE IF NOT EXISTS meta (
     id INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
     name VARCHAR(64),
@@ -65,23 +72,41 @@ CREATE TABLE IF NOT EXISTS lookup (
 
 
 if [ "$DATASTORE" = "mysql" ]; then
-    if wwpackage_check mysql-server; then
-        wwservice_activate mysqld mysql
-    elif wwpackage_check mariadb-server; then
-        wwservice_activate mariadb
-    else
-        wwprint "No database package seems to exist for mysql!\n" error
-        exit 255
+    if [ "$DBSERVER" = "localhost" ]; then
+        if wwpackage_check mysql-server; then
+            wwservice_activate mysqld mysql
+        elif wwpackage_check mariadb-server; then
+            wwservice_activate mariadb
+        else
+            wwprint "No database package seems to exist for mysql!\n" error
+            exit 255
+        fi
     fi
 else
     wwprint "Skipping configuration of datastore driver: $DATASTORE\n"
+    exit 0
 fi
 
-if ! echo "use $DBNAME;" | mysql 2>/dev/null; then
-    wwrun mysqladmin create "$DBNAME" || exit 255
+if [ "$DBSERVER" != "localhost" ]; then
+    DBOPTIONS="-h $DBSERVER"
 fi
 
-DBVERS=`echo "select value from meta where name = 'dbvers' LIMIT 1;" | mysql -s "$DBNAME" 2>/dev/null`
+if ! echo -n | mysql $DBOPTIONS 2>/dev/null; then
+    read -p "Enter database user with root privileges at $DBSERVER [root]:" DBROOT
+    if [ "$DBROOT" == "" ]; then
+        DBROOT="root"
+    fi
+    read -s -p "Enter database password at $DBSERVER for the $DBROOT user:" MYSQL_PWD
+    echo
+    export MYSQL_PWD
+    DBOPTIONS="$DBOPTIONS -u $DBROOT"
+fi
+
+if ! echo "use $DBNAME;" | mysql $DBOPTIONS 2>/dev/null; then
+    wwrun mysqladmin $DBOPTIONS create "$DBNAME" || exit 255
+fi
+
+DBVERS=`echo "select value from meta where name = 'dbvers' LIMIT 1;" | mysql $DBOPTIONS -s "$DBNAME" 2>/dev/null`
 if [ -n "$DBVERS" ]; then
     wwprint "Database version: $DBVERS\n"
 else
@@ -90,14 +115,14 @@ fi
 
 if [ -z "$DBVERS" ]; then
     wwprint "Creating database schema"
-    if echo "$SCHEMA" | mysql "$DBNAME"; then
+    if echo "$SCHEMA" | mysql $DBOPTIONS "$DBNAME"; then
         reply_success
     else
         reply_error
         exit 255
     fi
     wwprint "Setting the DB SCHEMA version to $APIVERSION"
-    if echo "insert into meta (name, value) VALUES ('dbvers', '$APIVERSION');" | mysql "$DBNAME"; then
+    if echo "insert into meta (name, value) VALUES ('dbvers', '$APIVERSION');" | mysql $DBOPTIONS "$DBNAME"; then
         reply_success
     else
         reply_error
@@ -105,22 +130,13 @@ if [ -z "$DBVERS" ]; then
     fi
 elif [ $DBVERS -lt $APIVERSION ]; then
     wwprint "Updating database schema"
-    echo "UPDATE meta SET value=$APIVERSION WHERE name = 'dbvers';" | mysql "$DBNAME"
+    echo "UPDATE meta SET value=$APIVERSION WHERE name = 'dbvers';" | mysql $DBOPTIONS "$DBNAME"
     replay_skipped
 fi
 
 if [ -n "$DBUSER" -a "$DBUSER" != "root" ]; then
     wwprint "Updating database permissions for base users"
-    if echo "GRANT SELECT ON $DBNAME.* TO $DBUSER@localhost IDENTIFIED BY '$DBPASS';" | mysql $DBNAME; then
-        reply_success
-    else
-        reply_error
-    fi
-fi
-
-if [ -n "$DBROOTUSER" -a "$DBROOTUSER" != "root" ]; then
-    wwprint "Updating database permissions for root user"
-    if echo "GRANT ALL PRIVILEGES ON $DBNAME.* TO $DBROOTUSER@localhost IDENTIFIED BY '$DBROOTPASS';" | mysql $DBNAME; then
+    if echo "GRANT ALL PRIVILEGES ON $DBNAME.* TO $DBUSER IDENTIFIED BY '$DBPASS';" | mysql $DBOPTIONS $DBNAME; then
         reply_success
     else
         reply_error
@@ -128,7 +144,6 @@ if [ -n "$DBROOTUSER" -a "$DBROOTUSER" !
 fi
 
 
-
 exit 0
 
 # vim: filetype=sh:syntax=sh:expandtab:ts=4:sw=4:
